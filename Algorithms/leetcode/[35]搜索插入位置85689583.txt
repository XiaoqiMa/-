class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:


        if len(nums) == 0:
            return 0
        
        left, right = 0, len(nums) - 1
        while left <= right:
            mid = left + (right - left) // 2
            if nums[mid] < target:
                left = mid + 1
            elif nums[mid] > target:
                right = mid - 1
            elif nums[mid] == target:
                right = mid - 1
        if left >= len(nums):
            return len(nums)
        else:
            return left

        # if len(nums) == 0:
        #     return 0
        # left = 0
        # right = len(nums)
        # while left < right:
        #     mid = left + (right - left) // 2
        #     if nums[mid] == target:
        #         return mid
        #     if nums[mid] < target:
        #         left = mid + 1
        #     else:
        #         right = mid
        # return left
# runtime:56 ms
# memory:14.3 MB
